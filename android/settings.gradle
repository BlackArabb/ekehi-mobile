pluginManagement {
    def version = "0.74.87" // Match your actual React Native version
    def (_, reactNativeMinor, reactNativePatch) = version.tokenize(".").collect { it.toInteger() }

    repositories {
        gradlePluginPortal()
        google()
        mavenCentral()
    }
}

plugins { 
    id("com.android.application") version "8.7.2" apply false
    id("com.android.library") version "8.7.2" apply false
    id("org.jetbrains.kotlin.android") version "1.9.23" apply false
}

def getRNMinorVersion() {
    return 74
}

if (getRNMinorVersion() >= 75) {
    extensions.configure(com.facebook.react.ReactSettingsExtension) { ex ->
        if (System.getenv("EXPO_UNSTABLE_CORE_AUTOLINKING") == "1") {
            println("\u001B[32mUsing expo-modules-autolinking as core autolinking source\u001B[0m")
            def command = [
                "node",
                "--no-warnings",
                "--eval",
                "require(require.resolve('expo-modules-autolinking', { paths: [require.resolve('expo/package.json')] }))(process.argv.slice(1))",
                "react-native-config",
                "--json",
                "--platform",
                "android"
            ].toList()
            ex.autolinkLibrariesFromCommand(command)
        } else {
            ex.autolinkLibrariesFromCommand()
        }
    }
}

rootProject.name = 'Ekehi Network'

dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://www.jitpack.io" } // keep jitpack here
    }

    versionCatalogs {
        reactAndroidLibs {
            from(files(new File(
                ["node", "--print", "require.resolve('react-native/package.json')"]
                    .execute(null, rootDir).text.trim(),
                "../gradle/libs.versions.toml")))
        }
    }
}

apply from: new File(
    ["node", "--print", "require.resolve('expo/package.json')"]
        .execute(null, rootDir).text.trim(),
    "../scripts/autolinking.gradle");
useExpoModules()

if (getRNMinorVersion() < 75) {
    apply from: new File(
        ["node", "--print", "require.resolve('@react-native-community/cli-platform-android/package.json', { paths: [require.resolve('react-native/package.json')] })"]
            .execute(null, rootDir).text.trim(),
        "../native_modules.gradle");
    applyNativeModulesSettingsGradle(settings)
}

include(":app")
includeBuild(new File(
    ["node", "--print", "require.resolve('@react-native/gradle-plugin/package.json', { paths: [require.resolve('react-native/package.json')] })"]
        .execute(null, rootDir).text.trim()).getParentFile())
